/* Jenkinsfile (Declarative Pipeline) */
pipeline {
    agent {
         label "database_mgmt"
    }
      
    parameters {
        string(name: 'BRANCH', defaultValue: 'refs/heads/master', description: 'The git branch to build')
        string(name: 'SERVER', defaultValue: 'localhost', description: 'The SQL Server that you intend to deploy to.')
        string(name: 'INSTANCE', defaultValue: 'MSSQLSERVER', description: 'The SQL Server Instance that you intend to deploy to.')
        string(name: 'DATABASE', defaultValue: 'not_TPR', description: 'The name of the database that needs to be deployed.')
        string(name: 'FLYWAYROOT', defaultValue: 'not_TPR_dev', description: 'The relative path from git root to the root of the Flyway project.')
    }
	
    		
	
	stages {
        stage('Pre-deploy prep') {
            steps {
                powershell "./build/pre-deploy.ps1 -server ${params.SERVER} -instance ${params.INSTANCE} -database ${params.DATABASE} -flywayRoot ${params.FLYWAYROOT}"
            }
        }

        stage('Flyway migrate') {
            steps {
                withCredentials([string(credentialsId: 'Flyway_License_Key', variable: 'FLYWAY_LICENCE')]) {
					powershell "./build/migrate.ps1 -server ${params.SERVER} -instance ${params.INSTANCE} -database ${params.DATABASE} -flywayRoot ${params.FLYWAYROOT} -licenceKey ${FLYWAY_LICENCE}"
                }
			}
        }

        stage('Backup Flyway Schema History to git') {
            steps {
                powershell "./build/update_fsh_data.ps1 -server ${params.SERVER} -instance ${params.INSTANCE} -database ${params.DATABASE} -flywayRoot ${params.FLYWAYROOT} -jobName ${env.JOB_NAME} -buildNumber ${env.BUILD_NUMBER} -buildUrl ${env.BUILD_URL} -branch ${params.BRANCH}"
            }
        }
    }
}
