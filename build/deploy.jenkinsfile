/*
node(AgentName) {
    stage('Test1') {
    }
}
*/


/* Jenkinsfile (Declarative Pipeline) */
/* Requires the Docker Pipeline plugin */
pipeline {
    agent { 
        /* Example provided by CM team */ 
        // docker { image 'maven:3.9.0-eclipse-temurin-11' }
        
        /* For Alex's PoC VM */
        label "builtin" 
    }
    parameters {
        string(name: 'BRANCH', defaultValue: 'refs/heads/main', description: 'The git branch to build')
        string(name: 'SERVER', defaultValue: 'localhost', description: 'The SQL Server that you intend to deploy to.')
        string(name: 'INSTANCE', defaultValue: 'MSSQLSERVER', description: 'The SQL Server Instance that you intend to deploy to.')
        string(name: 'DATABASE', defaultValue: 'not_tpr_prod', description: 'The name of the database that needs to be deployed.')
        string(name: 'FLYWAYROOT', defaultValue: 'not_TPR_prod', description: 'The relative path from git root to the root of the Flyway project.')
    }
    stages {
        stage('Pre-deploy prep') {
            steps {
                powershell "./build/pre-deploy.ps1 -server ${params.SERVER} -instance ${params.INSTANCE} -database ${params.DATABASE} -branch = ${params.BRANCH}"
            }
        }

        stage('Flyway migrate') {
            steps {
                powershell "./build/migrate.ps1 -server ${params.SERVER} -instance ${params.INSTANCE} -database ${params.DATABASE} -flywayRoot ${params.FLYWAYROOT}"
            }
        }

        stage('Backup Flyway Schema History to git') {
            steps {
                powershell "./build/update_fsh_data.ps1 -server ${params.SERVER} -instance ${params.INSTANCE} -database ${params.DATABASE} -flywayRoot ${params.FLYWAYROOT} -jobName ${env.JOB_NAME} -buildNumber ${env.BUILD_NUMBER} -buildUrl ${env.BUILD_URL} -branch = ${params.BRANCH}"
            }
        }
    }
}